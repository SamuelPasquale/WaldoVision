So I am not very experienced with the technical side of any AI programs but I was just thinking a bit about exactly how the AI should analyze video clips, in terms of what data points it should be gathering and analyzing. I'm not sure how far along you all are with the process of designing the AI, but here is an idea I had.

I think the AI should have two seperate functions (collect and analyze two different data sets) for each clip, and from what I do know about AI I think both of these functions should be incredibly workable.

1.) Funtion one should record and analyze the xy coordinates of the player's crosshairs over the time period from which the enemy player's model is detected on screen to the time where the crosshair reaches the enemy player model. In order to be effective this function will obviously have to record the coordinates of the enemy player model. Technically we could record the coordinate field for the entire model but in the vast majority of aim hacks the goal it to aim for the head, or center of mass, so it would  be faster and more efficient on the processing side to initially provide just two points for reference, one in the center of the model's head and one in the center of the model's coordinate field. This way the AI can analyze the route the player's crosshair takes to its target. This function will allow the AI to analyze a player?s reaction time and initial aim. Theoretically this should make it incredibly easy to detect if an aimbot is being used, as the initial vector and subsequent vector transformations made to adjust the crosshair?s route towards the target as it moves would show inhuman levels of mathematical precision if generated by a cheat.

2.) The second function should record and analyze the xy coordinates of the player's crosshairs over the time period from which the crosshairs reach the player model to the time of the kill (or the time when the enemy player model leaves the field of vision). In the code we should provide a function which analyzes the values of collected data until it can determine which point the player is tracking (head or center of mass). Once the program can determine which point the crosshair is locking on to it should only use this point for the actual AI analysis. This should simplify the processing. This function should be able to analyze the tracking and recoil control ability of the player and determine if they are indeed human or too mathematically consistent. I?m not sure how exactly recoil control can be determined, but the general idea would be to graph out a smooth path for the crosshairs as it follows the target and then calculate the standard deviation values as the player fires and look at these values for some sort of inhuman perfection or consistent pattern. Tracking ability would be quite similar to function one, simply comparing the vectors of the crosshairs movement with respect to the xy position of the target. A cheat would show extreme precision and accuracy in these vectors. In a blatant aimbot, these vectors would perfectly route to the real-time position of the target.

Hopefully that all makes sense, like I said before I am new to this project and the technical side of AI program although I do have a lot of (educational) experience in computer science and mathematics. I?m not sure how much of this has already been discussed or thought through and how much of this could be a viable solution. This is simply my first attempt at a rough conceptual design for the AI algorithm. Those of you with more expertise than me please feel free to give me feedback and let me know if any of my suggestions might be viable. Thanks!


